{"version":3,"sources":["ffd20/patch/0.2.24/fix-item-range-migration.mjs","ffd20/patch/9.1.0/bad-rolldata-shield-handling.mjs","ffd20/patch/9.1.0/fix-vision-update-for-actorless.mjs","ffd20/patch/9.1.0/new-senses-with-basic-actor.mjs","ffd20/patch/10.1.2/roll-fromdata.mjs","ffd20/patch/10.1.2/fix-vision.mjs","ffd20/patch/10.1.0/fix-disable-lowlight.mjs","ffd20/patch/10.1.2/blindsense-ignores-walls.mjs","ffd20/patch/10.1.2/stacking-bonuses.mjs","ffd20-patch.mjs"],"sourcesContent":["console.log('FFD20 PATCH 🩹 | Applying Item Range migration fix');\n\nfunction fixItemUpdate(wrapped, update, ...args) {\n\tconst prefix = game.release.generation >= 10 ? 'system' : 'data';\n\tconst mi = update[prefix]?.range?.maxIncrements;\n\tif (mi !== undefined) {\n\t\tupdate[`${prefix}.range.maxIncrements`] = mi;\n\t\tdelete update[prefix].range.maxIncrements;\n\t\tif (isObjectEmpty(update[prefix].range)) delete update[prefix].range;\n\t\tif (isObjectEmpty(update[prefix])) delete update[prefix];\n\t}\n\treturn wrapped(update, ...args);\n}\n\nlibWrapper.register('ffd20-patch', 'CONFIG.Item.documentClass.prototype.update', fixItemUpdate);\n// TODO: Convert to preUpdate hook usage?\n","// https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1420\n\n// Library module means this is loaded before game system, so init hook runs before FFD20\nHooks.once('init', () => {\n\tif (game.release.generation >= 10) return;\n\tif (game.system.data?.version !== '9.0.0') return;\n\n\tHooks.once('ffd20.postInit', () => {\n\t\tconsole.log('FFD20 PATCH 🩹 | Misparsed shield data in getRollData: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1420');\n\n\t\tgame.ffd20.documents.ActorFFD20.prototype.getRollData = function getRollData(options = { refresh: false }) {\n\t\t\tlet result;\n\n\t\t\t// Return cached data, if applicable\n\t\t\tconst skipRefresh = !options.refresh && this._rollData;\n\t\t\tif (skipRefresh) {\n\t\t\t\tresult = this._rollData;\n\n\t\t\t\t// Clear certain fields\n\t\t\t\tconst clearFields = CONFIG.FFD20.temporaryRollDataFields.actor;\n\t\t\t\tfor (const k of clearFields) {\n\t\t\t\t\tconst arr = k.split('.');\n\t\t\t\t\tconst k2 = arr.slice(0, -1).join('.');\n\t\t\t\t\tconst k3 = arr.slice(-1)[0];\n\t\t\t\t\tif (k2 === '') delete result[k];\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst obj = getProperty(result, k2);\n\t\t\t\t\t\tif (typeof obj === 'object') delete obj[k3];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = deepClone(this.data.data);\n\t\t\t}\n\n\t\t\t/* ----------------------------- */\n\t\t\t/* Always add the following data\n\t\t\t\t/* ----------------------------- */\n\t\t\t// Add combat round, if in combat\n\t\t\tif (game.combats?.viewed) {\n\t\t\t\tresult.combat = {\n\t\t\t\t\tround: game.combat.round || 0,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Add denied Dex to AC\n\t\t\tsetProperty(result, 'conditions.loseDexToAC', this.flags.loseDexToAC);\n\n\t\t\t// Return cached data, if applicable\n\t\t\tif (skipRefresh) return result;\n\n\t\t\t/* ----------------------------- */\n\t\t\t/* Set the following data on a refresh\n\t\t\t\t/* ----------------------------- */\n\t\t\t// Set size index\n\t\t\t{\n\t\t\t\tconst sizeChart = Object.keys(CONFIG.FFD20.sizeChart);\n\t\t\t\tresult.size = sizeChart.indexOf(result.traits.size);\n\t\t\t}\n\n\t\t\t// Add more info for formulas\n\t\t\tresult.armor = { type: 0 };\n\t\t\tresult.shield = { type: 0 };\n\n\t\t\t// Determine equipped armor type\n\t\t\tconst armorId = result.equipment.armor.id,\n\t\t\t\tshieldId = result.equipment.shield.id;\n\t\t\tconst eqArmor = { total: Number.NEGATIVE_INFINITY, ac: 0, enh: 0 };\n\t\t\tconst armor = armorId ? this.items.get(armorId) : null;\n\t\t\tif (armor) {\n\t\t\t\tresult.armor.type = result.equipment.armor.type;\n\t\t\t\tconst armorData = armor.data.data;\n\t\t\t\tconst enhAC = armorData.armor.enh ?? 0,\n\t\t\t\t\tbaseAC = armorData.armor.value ?? 0,\n\t\t\t\t\tfullAC = baseAC + enhAC;\n\t\t\t\tif (eqArmor.total < fullAC) {\n\t\t\t\t\teqArmor.ac = baseAC;\n\t\t\t\t\teqArmor.total = fullAC;\n\t\t\t\t\teqArmor.enh = enhAC;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!Number.isFinite(eqArmor.total)) eqArmor.total = 0;\n\t\t\tmergeObject(result.armor, eqArmor);\n\n\t\t\t// Determine equipped shield type\n\t\t\tconst shield = shieldId ? this.items.get(shieldId) : null;\n\t\t\tconst eqShield = { total: Number.NEGATIVE_INFINITY, ac: 0, enh: 0 };\n\t\t\tif (shield) {\n\t\t\t\tresult.shield.type = result.equipment.shield.type;\n\t\t\t\tconst shieldData = shield.data.data;\n\t\t\t\tconst enhAC = shieldData.armor.enh ?? 0,\n\t\t\t\t\tbaseAC = shieldData.armor.value ?? 0,\n\t\t\t\t\tfullAC = baseAC + enhAC;\n\t\t\t\tif (eqShield.total < fullAC) {\n\t\t\t\t\teqShield.ac = baseAC;\n\t\t\t\t\teqShield.total = fullAC;\n\t\t\t\t\teqShield.enh = enhAC;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmergeObject(result.shield, eqShield);\n\n\t\t\t// Add spellbook info\n\t\t\tresult.spells = result.attributes.spells.spellbooks;\n\t\t\tfor (const [k, book] of Object.entries(result.spells)) {\n\t\t\t\tbook.abilityMod = result.abilities[book.ability]?.mod ?? 0;\n\t\t\t\t// Add alias\n\t\t\t\tif (book.class && book.class !== '_hd') result.spells[book.class] ??= book;\n\t\t\t}\n\n\t\t\t// Add item dictionary flags\n\t\t\tif (this.itemFlags) result.dFlags = this.itemFlags.dictionary;\n\n\t\t\t// Add range info\n\t\t\tresult.range = this.constructor.getReach(this.data.data.traits.size, this.data.data.traits.stature);\n\n\t\t\tthis._rollData = result;\n\n\t\t\t// Call hook\n\t\t\tHooks.callAll('ffd20.getRollData', this, result, true);\n\n\t\t\treturn result;\n\t\t}\n\t});\n});\n","// Can not be dynamically imported\n\n// Library module means this is loaded before game system, so init hook runs before FFD20\nHooks.once('init', () => {\n\tif (game.release?.generation >= 10) return;\n\tif (game.system.data?.version !== '9.0.0') return;\n\n\tHooks.once('ffd20.postInit', () => {\n\t\tconsole.log('FFD20 PATCH 🩹 | Token vision update breaks with actorless tokens: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1429');\n\n\t\tconst orig = CONFIG.Token.objectClass.prototype.updateVisionSource;\n\t\tCONFIG.Token.objectClass.prototype.updateVisionSource = function (...args) {\n\t\t\tif (!this.actor) return CONFIG.Token.objectClass.__proto__.prototype.updateVisionSource.call(this, ...args);\n\t\t\treturn orig.call(this, ...args);\n\t\t}\n\t});\n});\n","// https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1435\n\n// Library module means this is loaded before game system, so init hook runs before FFD20\nHooks.once('init', () => {\n\tif (game.release?.generation >= 10) return;\n\tif (!['9.0.0'].includes(game.system.data?.version)) return;\n\n\tHooks.once('ffd20.postInit', () => {\n\t\tconsole.log('FFD20 PATCH 🩹 | Basic actors behave badly with LLV: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1435');\n\n\t\t// const origlowLightMultiplier = CONFIG.Canvas.layers.sight.layerClass.prototype.lowLightMultiplier;\n\t\tCONFIG.Canvas.layers.sight.layerClass.prototype.lowLightMultiplier = function () {\n\t\t\tconst result = { dim: 1, bright: 1 };\n\n\t\t\tconst relevantTokens = canvas.tokens.placeables.filter((o) => o.actor && o.actor.testUserPermission(game.user, 'OBSERVER'));\n\t\t\tconst lowLightTokens = relevantTokens.filter((o) => !!o.actor && o.actor.type !== 'basic' && o.actor.data.data.traits.senses.ll.enabled);\n\n\t\t\tif (game.user.isGM || game.settings.get('ffd20', 'lowLightVisionMode')) {\n\t\t\t\tfor (const t of lowLightTokens.filter((o) => o._controlled)) {\n\t\t\t\t\tconst multiplier = t.actor?.data.data.traits.senses.ll.multiplier.dim || 2;\n\t\t\t\t\tconst multiplierBright = t.actor?.data.data.traits.senses.ll.multiplier.bright || 2;\n\t\t\t\t\tresult.dim = Math.max(result.dim, multiplier);\n\t\t\t\t\tresult.bright = Math.max(result.bright, multiplierBright);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst hasControlledTokens = relevantTokens.filter((o) => o._controlled).length > 0,\n\t\t\t\t\thasControlledLowLightTokens = lowLightTokens.filter((o) => o._controlled).length > 0,\n\t\t\t\t\thasLowLightTokens = lowLightTokens.length > 0;\n\t\t\t\tif (!hasControlledTokens && hasLowLightTokens || hasControlledLowLightTokens) {\n\t\t\t\t\tfor (const t of lowLightTokens) {\n\t\t\t\t\t\tconst mult = t.actor?.data.data.traits.senses.ll.multiplier.dim || 2;\n\t\t\t\t\t\tconst multBright = t.actor?.data.data.traits.senses.ll.multiplier.bright || 2;\n\t\t\t\t\t\tresult.dim = Math.max(result.dim, mult);\n\t\t\t\t\t\tresult.bright = Math.max(result.bright, multBright);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t});\n});\n","function fixRollFFD20(wrapped, data, ...args) {\n\tif (data.class === 'RollFFD$20') data.class = 'RollFFD20';\n\treturn wrapped(data, ...args);\n}\n\nHooks.once('init', () => {\n\tconst version = game.system.version ?? game.system.data.version;\n\tif (version !== '10.1.1') return;\n\n\tconsole.log('FFD20 PATCH 🩹 | Overloading Roll.fromData to mitigate RollFFD$20 errors')\n\tlibWrapper.register('ffd20-patch', 'Roll.fromData', fixRollFFD20, libWrapper.WRAPPER);\n});\n","/**\n * Fixes various vision problems\n *\n * ✔ Settings are disabled: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1681\n * ✔ Advanced configuration is thrown away: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1692\n * ✘ Basic vision is replaced with darkvision: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1693\n * ☐ See invisiiblity is limited to darkvision: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1694\n * ✔ Vision is force enabled on all: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1695\n */\n\n/* global ffd20 */\n\nHooks.once('init', () => {\n\tif ((game.release?.generation ?? 8) < 10) return;\n\tif (isNewerVersion('10.1.2', game.system.version)) return;\n\n\tconsole.log('FFD20 PATCH 🩹 | Re-enabling vision settings: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1681')\n\tconst reEnableElement = (el) => el.disabled = false;\n\n\t/**\n\t * @param {Element} html\n\t */\n\tconst reEnableVision = (html) => {\n\t\tsetTimeout(() => {\n\t\t\tconst tab = html.querySelector('.tab[data-tab=\"vision\"]');\n\t\t\ttab.querySelectorAll('input,select').forEach(el => {\n\t\t\t\tif (el.name == 'sight.visionMode') return;\n\t\t\t\t// console.log(el.name);\n\t\t\t\tif (el.disabled == false) setTimeout(() => reEnableElement(el), 500); // hacky method to attempt to ensure async functions happen after FFD20\n\t\t\t\telse el.disabled = false;\n\t\t\t});\n\t\t},\n\t\t200);\n\t}\n\n\t/**\n\t * @param {JQuery} html\n\t */\n\tHooks.on('renderTokenConfig', async (_, [html]) => reEnableVision(html));\n});\n\nHooks.once('init', () => {\n\tif ((game.release?.generation ?? 8) < 10) return;\n\tif (isNewerVersion('10.1.2', game.system.version)) return;\n\n\tconsole.log('FFD20 PATCH 🩹 | Keep advanced config: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1692')\n\tconsole.log('FFD20 PATCH 🩹 | Keep basic vision range: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1693')\n\tconsole.log('FFD20 PATCH 🩹 | Allow disabling vision: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1695')\n\n\tfunction refreshDetectionModes() {\n\t\tif (!['character', 'npc'].includes(this.actor?.type)) return;\n\t\tif (this.getFlag('ffd20', 'customVisionRules')) return;\n\t\tif (!this.sight.enabled) return;\n\n\t\t// Reset sight properties\n\t\tthis.sight.visionMode = 'basic';\n\t\tconst baseRange = this.sight.range;\n\n\t\t// Prepare sight\n\t\tconst darkvisionRange = this.actor?.system?.traits?.senses?.dv ?? 0;\n\t\tif (darkvisionRange > 0) {\n\t\t\tthis.sight.range = Math.max(baseRange, ffd20.utils.convertDistance(darkvisionRange)[0]);\n\t\t\tthis.sight.visionMode = 'darkvision';\n\t\t\tthis.sight.saturation = -1;\n\t\t}\n\n\t\t// Set basic detection mode\n\t\tconst basicId = DetectionMode.BASIC_MODE_ID;\n\t\tconst basicMode = this.detectionModes.find((m) => m.id === basicId);\n\t\tif (!basicMode) this.detectionModes.push({ id: basicId, enabled: true, range: baseRange });\n\t\telse basicMode.range = baseRange;\n\n\t\t// Set see invisibility detection mode\n\t\tconst seeInvId = 'seeInvisibility';\n\t\tconst seeInvMode = this.detectionModes.find((m) => m.id === seeInvId);\n\t\tif (!seeInvMode && (this.actor?.system?.traits?.senses?.si || this.actor?.system?.traits?.senses?.tr)) {\n\t\t\tthis.detectionModes.push({ id: seeInvId, enabled: true, range: this.sight.range });\n\t\t}\n\t\telse if (seeInvMode != null) {\n\t\t\tif (!(this.actor?.system?.traits?.senses?.si || this.actor?.system?.traits?.senses?.tr)) {\n\t\t\t\tthis.detectionModes.splice(this.detectionModes.indexOf(seeInvMode, 1));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseeInvMode.range = this.sight.range;\n\t\t\t}\n\t\t}\n\n\t\t// Set blind sense detection mode\n\t\tconst blindSenseId = 'blindSense';\n\t\tconst blindSenseMode = this.detectionModes.find((m) => m.id === blindSenseId);\n\t\tif (!blindSenseMode && this.actor?.system?.traits?.senses?.bse) {\n\t\t\tthis.detectionModes.push({ id: blindSenseId, enabled: true, range: this.actor.system.traits.senses.bse });\n\t\t}\n\t\telse if (blindSenseMode != null) {\n\t\t\tif (!this.actor?.system?.traits?.senses?.bse) {\n\t\t\t\tthis.detectionModes.splice(this.detectionModes.indexOf(blindSenseMode, 1));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tblindSenseMode.range = this.actor.system.traits.senses.bse;\n\t\t\t}\n\t\t}\n\n\t\t// Set blind sight detection mode\n\t\tconst blindSightId = 'blindSight';\n\t\tconst blindSightMode = this.detectionModes.find((m) => m.id === blindSightId);\n\t\tif (!blindSightMode && this.actor?.system?.traits?.senses?.bs) {\n\t\t\tthis.detectionModes.push({ id: blindSightId, enabled: true, range: this.actor.system.traits.senses.bs });\n\t\t}\n\t\telse if (blindSightMode != null) {\n\t\t\tif (!this.actor?.system?.traits?.senses?.bs) {\n\t\t\t\tthis.detectionModes.splice(this.detectionModes.indexOf(blindSightMode, 1));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tblindSightMode.range = this.actor.system.traits.senses.bs;\n\t\t\t}\n\t\t}\n\n\t\t// Set tremor sense detection mode\n\t\tconst tremorSenseId = 'feelTremor';\n\t\tconst tremorSenseMode = this.detectionModes.find((m) => m.id === tremorSenseId);\n\t\tif (!blindSightMode && this.actor?.system?.traits?.senses?.ts) {\n\t\t\tthis.detectionModes.push({ id: tremorSenseId, enabled: true, range: this.actor.system.traits.senses.ts });\n\t\t}\n\t\telse if (tremorSenseMode != null) {\n\t\t\tif (!this.actor?.system?.traits?.senses?.ts) {\n\t\t\t\tthis.detectionModes.splice(this.detectionModes.indexOf(tremorSenseMode, 1));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttremorSenseMode.range = this.actor.system.traits.senses.ts;\n\t\t\t}\n\t\t}\n\n\t\t// Sort detection modes\n\t\tthis.detectionModes.sort(this._sortDetectionModes.bind(this));\n\t}\n\n\tconst old = ffd20.documents.TokenDocumentFFD20.prototype.refreshDetectionModes;\n\tffd20.documents.TokenDocumentFFD20.prototype.refreshDetectionModes = refreshDetectionModes;\n});\n","function getRadiusLLVFix(wrapped) {\n\tif (this.object?.document?.getFlag('ffd20', 'disableLowLight')) return { dim: this.data.dim, bright: this.data.bright };\n\treturn wrapped.call(this);\n}\n\nconst fixDisableLowLight = () => {\n\tif (game.release.generation >= 10) {\n\t\tif (isNewerVersion(game.system.version, '10.1.2')) return;\n\t\tconsole.log('FFD20 PATCH 🩹 | Fxing light source disable low-light toggle: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1736')\n\t\tlibWrapper.register('ffd20-patch', 'LightSource.prototype.getRadius', getRadiusLLVFix, libWrapper.MIXED);\n\t}\n}\n\nHooks.once('init', fixDisableLowLight);\n","console.log('FFD20 PATCH 🩹 | Blindsense/Blindsight ignores walls')\n\nHooks.once('ffd20PostInit', () => {\n\tif ((game.release?.generation ?? 8) < 10) return;\n\tif (isNewerVersion('10.1.2', game.system.version)) return;\n\n\tCONFIG.Canvas.detectionModes.blindSense.walls = true;\n\tCONFIG.Canvas.detectionModes.blindSight.walls = true;\n});\n","Hooks.once('ffd20PostInit', () => {\n\tif ((game.release?.generation ?? 8) < 10) return;\n\tif (isNewerVersion('10.1.2', game.system.version)) return;\n\n\tconsole.log('FFD20 PATCH 🩹 | Stacking bonuses fix: https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues/1749')\n\n\tfunction fixedApplyChange(actor, targets = null, { applySourceInfo = true } = {}) {\n\t\t// Prepare change targets\n\t\tif (!targets) {\n\t\t\ttargets = ffd20.documents.actor.changes.getChangeFlat.call(actor, this.subTarget, this.modifier);\n\t\t\tif (!(targets instanceof Array)) targets = [targets];\n\t\t}\n\n\t\tconst rollData = this.parent ? this.parent.getRollData({ refresh: true }) : actor.getRollData({ refresh: true });\n\n\t\tconst overrides = actor.changeOverrides;\n\t\tfor (const t of targets) {\n\t\t\tconst override = overrides[t];\n\t\t\tif (!overrides || override) {\n\t\t\t\tlet operator = this.operator;\n\t\t\t\tif (operator === '+') operator = 'add';\n\t\t\t\tif (operator === '=') operator = 'set';\n\n\t\t\t\tconst modifierChanger =\n\t\t\t\t\tt != null ? t.match(/^system\\.abilities\\.([a-zA-Z\\d]+)\\.(?:total|penalty|base)$/) : null;\n\t\t\t\tconst isModifierChanger = modifierChanger != null;\n\t\t\t\tconst abilityTarget = modifierChanger?.[1];\n\t\t\t\tconst ability = isModifierChanger ? deepClone(actor.system.abilities[abilityTarget]) : null;\n\n\t\t\t\tlet value = 0;\n\t\t\t\tif (this.formula) {\n\t\t\t\t\tif (operator === 'script') {\n\t\t\t\t\t\tif (!game.settings.get('ffd20', 'allowScriptChanges')) {\n\t\t\t\t\t\t\tui.notifications?.warn(game.i18n.localize('SETTINGS.ffd20AllowScriptChangesE'), { console: false });\n\t\t\t\t\t\t\tconsole.warn(game.i18n.localize('SETTINGS.ffd20AllowScriptChangesE'), this.parent);\n\t\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t\t\toperator = 'add';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst fn = this.createFunction(this.formula, ['d', 'item']);\n\t\t\t\t\t\t\tconst result = fn(rollData, this.parent);\n\t\t\t\t\t\t\tvalue = result.value;\n\t\t\t\t\t\t\toperator = result.operator;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (operator === 'function') {\n\t\t\t\t\t\tvalue = this.formula(rollData, this.parent);\n\t\t\t\t\t\toperator = 'add';\n\t\t\t\t\t}\n\t\t\t\t\telse if (!isNaN(this.formula)) {\n\t\t\t\t\t\tvalue = parseFloat(this.formula);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.isDeferred) {\n\t\t\t\t\t\tvalue = RollFFD20.replaceFormulaData(this.formula, rollData, { missing: 0 });\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = RollFFD20.safeRoll(this.formula, rollData, [t, this, rollData], {\n\t\t\t\t\t\t\tsuppressError: this.parent && !this.parent.testUserPermission(game.user, 'OWNER'),\n\t\t\t\t\t\t}).total;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.data.value = value;\n\n\t\t\t\tif (!t) continue;\n\t\t\t\tconst prior = override[operator][this.modifier] ?? 0;\n\n\t\t\t\tswitch (operator) {\n\t\t\t\t\tcase 'add':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet base = getProperty(actor, t);\n\n\t\t\t\t\t\t\t// Don't change non-existing ability scores\n\t\t\t\t\t\t\tif (base == null) {\n\t\t\t\t\t\t\t\tif (t.match(/^system\\.abilities/)) continue;\n\t\t\t\t\t\t\t\tbase = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (typeof base === 'number') {\n\t\t\t\t\t\t\t\tif (CONFIG.FFD20.stackingBonusModifiers.indexOf(this.modifier) !== -1) {\n\t\t\t\t\t\t\t\t\tsetProperty(actor, t, base + value);\n\t\t\t\t\t\t\t\t\toverride[operator][this.modifier] = prior + value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tconst diff = !prior ? value : Math.max(0, value - prior);\n\t\t\t\t\t\t\t\t\tsetProperty(actor, t, base + diff);\n\t\t\t\t\t\t\t\t\toverride[operator][this.modifier] = Math.max(prior, value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\tsetProperty(actor, t, value);\n\t\t\t\t\t\toverride[operator][this.modifier] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (applySourceInfo) this.applySourceInfo(actor, value);\n\n\t\t\t\t// Adjust ability modifier\n\t\t\t\tif (isModifierChanger) {\n\t\t\t\t\tconst prevMod = ffd20.utils.getAbilityModifier(ability.total, {\n\t\t\t\t\t\tdamage: ability.damage,\n\t\t\t\t\t\tpenalty: ability.penalty,\n\t\t\t\t\t});\n\t\t\t\t\tconst newAbility = actor.system.abilities[abilityTarget];\n\t\t\t\t\tconst mod = ffd20.utils.getAbilityModifier(newAbility.total, {\n\t\t\t\t\t\tdamage: newAbility.damage,\n\t\t\t\t\t\tpenalty: newAbility.penalty,\n\t\t\t\t\t});\n\t\t\t\t\tsetProperty(\n\t\t\t\t\t\tactor,\n\t\t\t\t\t\t`system.abilities.${abilityTarget}.mod`,\n\t\t\t\t\t\tgetProperty(actor, `system.abilities.${abilityTarget}.mod`) - (prevMod - mod)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tffd20.components.ItemChange.prototype.applyChange = fixedApplyChange;\n});\n","console.log('FFD20 PATCH 🩹 | Initializing');\n\n// Hack needed to get overrides for migration or similar early states\nimport './ffd20/patch/9.1.0/bad-rolldata-shield-handling.mjs';\nimport './ffd20/patch/9.1.0/fix-vision-update-for-actorless.mjs';\nimport './ffd20/patch/9.1.0/new-senses-with-basic-actor.mjs';\nimport './ffd20/patch/10.1.2/roll-fromdata.mjs';\nimport './ffd20/patch/10.1.2/fix-vision.mjs';\nimport './ffd20/patch/10.1.0/fix-disable-lowlight.mjs';\nimport './ffd20/patch/10.1.2/blindsense-ignores-walls.mjs';\nimport './ffd20/patch/10.1.2/stacking-bonuses.mjs';\n\nHooks.once('init', function patchInit() {\n\tconst version = game.system.version ?? game.system.data.version;\n\timport(`./ffd20/${version}.mjs`)\n\t\t.catch(err => console.warn(`FFD20 PATCH 🩹 | Not available for FFD20 version ${version}`, err));\n\n\tif (isNewerVersion('9.1.0', version))\n\t\timport('./ffd20/patch/0.2.24/fix-item-range-migration.mjs');\n});\n"],"mappings":"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","names":["fix_item_range_migration_exports","fixItemUpdate","wrapped","update","args","prefix","mi","init_fix_item_range_migration","__esmMin","__name","__name","options","result","skipRefresh","clearFields","k","arr","k2","k3","obj","sizeChart","armorId","shieldId","eqArmor","armor","armorData","enhAC","baseAC","fullAC","shield","eqShield","shieldData","book","orig","args","result","relevantTokens","o","lowLightTokens","t","multiplier","multiplierBright","hasControlledTokens","hasControlledLowLightTokens","hasLowLightTokens","mult","multBright","fixRollFFD20","wrapped","data","args","__name","reEnableElement","__name","el","reEnableVision","html","_","refreshDetectionModes","baseRange","darkvisionRange","basicId","basicMode","m","seeInvId","seeInvMode","blindSenseId","blindSenseMode","blindSightId","blindSightMode","tremorSenseId","tremorSenseMode","old","getRadiusLLVFix","wrapped","__name","fixDisableLowLight","fixedApplyChange","actor","targets","applySourceInfo","rollData","overrides","t","override","operator","modifierChanger","isModifierChanger","abilityTarget","ability","value","result","prior","base","diff","prevMod","newAbility","mod","__name","__name","version","err"]}